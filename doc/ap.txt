#: Title : Raspberry Pi AP
#: Author : "Caio Abreu Ferreira" <abreuferr_gmail.com>
#: Description : Transformar um raspberry pi em um access point e gateway
#: Options : None

# INFORMACAO
#
# o objetivo deste tutorial eh o de configurar o raspberry pi para ser
# um access point e um gateway. Desta forma, o raspberry pi utilizara 
# uma conexao wifi(access point) e uma conexao ethernet(gateway).

# INSTALACAO
#
# instalacao dos aplicativos dnsmasq para ser o servidor dhcp e o software
# hostapd para tornar o raspberry pi um access point
#
$ sudo apt-get install hostapd isc-dhcp-server

# CONFIGURACÃƒO DAS INTERFACES DE REDE
#
$ sudo vi /etc/network/interfaces

auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
	address 192.168.1.12/24
	gateway 192.168.1.1

allow-hotplug wlan0
iface wlan0 inet static
	address 192.168.10.1
	netmask 255.255.255.0

# REINICIALIZAR AS INTERFACES DE REDE
#
$ sudo ifdown --force eth0
$ sudo ifdown --force wlan0
$ sudo ifup eth0
$ sudo ifup wlan0

# CONFIGURACAO DO SERVIDOR DHCP
#
$ sudo cat /etc/dhcp/dhcpd.conf

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

subnet 192.168.10.0 netmask 255.255.255.0 {
	range 192.168.10.50 192.168.10.100;
	option broadcast-address 192.168.10.255;
	option routers 192.168.10.1;
	default-lease-time 600;
	max-lease-time 7200;
	option domain-name "particula.local";
	option domain-name-servers 192.168.1.11;
}

$ sudo vi /etc/default/isc-dhcp-server

# On what interfaces should the DHCP server (dhcpd) serve DHCP requests?
# Separate multiple interfaces with spaces, e.g. "eth0 eth1".
INTERFACESv4="wlan0"

# Systemd
$ sudo systemctl restart isc-dhcp-server
$ sudo systemctl status isc-dhcp-server
$ sudo systemctl enable isc-dhcp-server

# CONFIGURACAO DO ACCESS POINT(WLAN0)
#
# alterar os parametros "interface=wlan0", "ssid=AP_NAME" e 
# "wpa_passphrase=AP_PASSWORD"
#
$ sudo vi /etc/hostapd/hostapd.conf

country_code=BR
interface=wlan0
hw_mode=g
channel=11
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP
rsn_pairwise=CCMP

ssid=SSID_NAME
wpa_passphrase=SSID_PASSWD

$ sudo cat /etc/default/hostapd

DAEMON_CONF="/etc/hostapd/hostapd.conf"

# Systemd
$ sudo systemctl unmask hostapd
$ sudo systemctl restart hostapd
$ sudo systemctl status hostapd
$ sudo systemctl enable hostapd

# SCRIPT DE FIREWALL
#
# ativar a opcao de NAT.
#
$ sudo vi /etc/init.d/rc.firewall.sh
#!/bin/bash

IPTABLES=/sbin/iptables

# clean all possible old mess
$IPTABLES -F
$IPTABLES -t nat -F
$IPTABLES -t mangle -F

# masquerading
echo 1 > /proc/sys/net/ipv4/ip_forward
sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
sudo iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT

# opening all
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT

$IPTABLES -t nat -P POSTROUTING ACCEPT
$IPTABLES -t nat -P PREROUTING ACCEPT
$IPTABLES -t filter -P FORWARD ACCEPT

# SYSTEMD
#
$ sudo vi /etc/systemd/system/rc.firewall.service
[Unit]
Description=Firewall Script
After=network.target

[Service]
Type=oneshot
ExecStart=/etc/init.d/rc.firewall.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target

$ sudo chmod +x /etc/init.d/rc.firewall.sh
$ sudo systemctl enable rc.firewall.service
$ sudo systemctl start rc.firewall.service